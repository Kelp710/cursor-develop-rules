---
description: **Pull Request Creation (GitHubのPR作成)**   - 作業内容: 完成したコードのGitHub上でのPR作成、コードレビューの依頼。
globs: 
alwaysApply: false
---

# Your rule content
# コマンド実行方針

- `cd`や`mkdir`、`touch`コマンドを使用する際は絶対パスで指定してください。

# Git Commit, Pull Request 作成のためのフロー

## Git-Flow
- Git Flow の運用ルールを厳守してください。
- ブランチ運用、リリース、ホットフィックスなどのフローに従い、適切なブランチ名を使用してください。

## Gitコミットメッセージ作成ルール

1. **Conventional Commits 形式を使用する**  
   - コミットメッセージは `type(scope): Subject` の形式で記述してください。  
   - `type` は以下のいずれかを使用してください:  
     - `feat` (機能追加)
     - `fix` (バグ修正)
     - `docs` (ドキュメント変更)
     - `style` (フォーマット調整、セミコロン追加など、機能に影響しない変更)
     - `refactor` (リファクタリング)
     - `test` (テストコードの追加・修正)
     - `chore` (その他雑多な変更)

2. **コミットの要約はシンプルに記述する**  
   - 現在形で記述し、何を、なぜ変更したのかを簡潔に表現してください。  
   - 50文字以内に収め、必要に応じて詳細は本文に記載してください。

3. **コミット前の確認**  
   - 必ず `git status` を実行し、現在の差分を確認してください。  
   - 差分の内容とコミットメッセージが矛盾しないように注意してください。
   - 不要な差分が入らないよう適宜`.gitignore`への追加を検討してください。

## Pull Request 作成手順

1. **修正内容の確認**  
   - 修正内容が全体として適切かどうか、また変更の趣旨を正確に把握してください。

2. **コミットの整理**  
   - 不要なコミットが混在していないか、または意味のある単位でコミットがまとめられているか確認してください。

3. **gh コマンドの利用**  
   - `gh` コマンドを利用して Pull Request を作成してください。

4. **PR テンプレートの利用**  
   - 以下のテンプレートに沿って、Pull Request のタイトルおよび本文を作成してください。

## Pull Request Template

- **概要**  
  - 変更の全体像を簡潔にまとめる

- **修正理由**  
  - なぜこの修正が必要なのか、その背景や目的を記載

- **修正内容**  
  - 具体的にどのような修正を行ったのかを詳細に記載

- **影響範囲**  
  - 変更によって影響を受ける箇所や他の機能との連携について記載

- **レビュー観点**  
  - レビュー時に重点的にチェックしてほしいポイントを明示

- **補足**  
  - その他、特記事項や補足情報があれば記載

---

このフローおよびテンプレートに従い、Git のコミットおよび Pull Request 作成を進めてください。ユーザーが作業内容を確認しながら、各ステップを順次進めるように設計されています。


# PR作成フェーズのフロー

## 1. ドキュメントの確認
- `git.md`
- `command.md`

## 2. 既存の設計ドキュメントの更新
- 変更した内容やタスク完了を`docs/architecture`配下の設計ファイルとタスクファイルに反映させてください。

## 3. Githubリポジトリの存在を確認
- ローカルにGithubリポジトリのoriginが登録されているか確認します。
- 存在しなければ、`gh repo create`によってリポジトリを作成し、`git init`を実行してください。
- リポジトリを作成した場合は、mainに変更をプッシュして以降のフローをスキップします。

## 4. ブランチの作成
- 現在のブランチがdevelopやmainなら最新状態にしてブランチを切ってください。
- それ以外のブランチであれば、そのブランチを使うか別のブランチを切るか開発者に質問してください。

## 5. コミット
- 変更をステージしてコミットしてください。

## 6. プッシュ
- コミット内容をリモートにプッシュしてください。

## 7. PR作成
- PRを作成してください。

---

以上のフローが完了したら次のフェーズに移動します。

- You can @ files here
- You can use markdown but dont have to
